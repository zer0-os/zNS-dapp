/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { BigNumber, BigNumberish, ethers, EventFilter, PopulatedTransaction, Signer } from "ethers";
import { CallOverrides, Contract, ContractTransaction, Overrides } from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { EventFragment, FunctionFragment, Result } from "@ethersproject/abi";

interface ContractRegistryInterface extends ethers.utils.Interface {
  functions: {
    "BANCOR_CONVERTER_UPGRADER()": FunctionFragment;
    "BNT_TOKEN()": FunctionFragment;
    "getAddress(bytes32)": FunctionFragment;
    "CONTRACT_REGISTRY()": FunctionFragment;
    "unregisterAddress(bytes32)": FunctionFragment;
    "contractNames(uint256)": FunctionFragment;
    "BANCOR_CONVERTER_FACTORY()": FunctionFragment;
    "BNT_CONVERTER()": FunctionFragment;
    "registerAddress(bytes32,address)": FunctionFragment;
    "itemCount()": FunctionFragment;
    "BANCOR_FORMULA()": FunctionFragment;
    "acceptOwnership()": FunctionFragment;
    "CONTRACT_FEATURES()": FunctionFragment;
    "owner()": FunctionFragment;
    "BANCOR_NETWORK()": FunctionFragment;
    "BANCOR_GAS_PRICE_LIMIT()": FunctionFragment;
    "addressOf(bytes32)": FunctionFragment;
    "BANCOR_X()": FunctionFragment;
    "newOwner()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "BANCOR_CONVERTER_UPGRADER",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "BNT_TOKEN", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "CONTRACT_REGISTRY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "unregisterAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "contractNames",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "BANCOR_CONVERTER_FACTORY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BNT_CONVERTER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerAddress",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "itemCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "BANCOR_FORMULA",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CONTRACT_FEATURES",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "BANCOR_NETWORK",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BANCOR_GAS_PRICE_LIMIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addressOf",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "BANCOR_X", values?: undefined): string;
  encodeFunctionData(functionFragment: "newOwner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "BANCOR_CONVERTER_UPGRADER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "BNT_TOKEN", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getAddress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "CONTRACT_REGISTRY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unregisterAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "contractNames",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANCOR_CONVERTER_FACTORY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BNT_CONVERTER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "itemCount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "BANCOR_FORMULA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CONTRACT_FEATURES",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "BANCOR_NETWORK",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BANCOR_GAS_PRICE_LIMIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addressOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "BANCOR_X", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "newOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "AddressUpdate(bytes32,address)": EventFragment;
    "OwnerUpdate(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddressUpdate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerUpdate"): EventFragment;
}

export class ContractRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ContractRegistryInterface;

  functions: {
    BANCOR_CONVERTER_UPGRADER(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_CONVERTER_UPGRADER()"(overrides?: CallOverrides): Promise<[string]>;

    BNT_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    "BNT_TOKEN()"(overrides?: CallOverrides): Promise<[string]>;

    getAddress(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    CONTRACT_REGISTRY(overrides?: CallOverrides): Promise<[string]>;

    "CONTRACT_REGISTRY()"(overrides?: CallOverrides): Promise<[string]>;

    unregisterAddress(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "unregisterAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    contractNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "contractNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    BANCOR_CONVERTER_FACTORY(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_CONVERTER_FACTORY()"(overrides?: CallOverrides): Promise<[string]>;

    BNT_CONVERTER(overrides?: CallOverrides): Promise<[string]>;

    "BNT_CONVERTER()"(overrides?: CallOverrides): Promise<[string]>;

    registerAddress(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerAddress(bytes32,address)"(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    itemCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "itemCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    BANCOR_FORMULA(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_FORMULA()"(overrides?: CallOverrides): Promise<[string]>;

    acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    CONTRACT_FEATURES(overrides?: CallOverrides): Promise<[string]>;

    "CONTRACT_FEATURES()"(overrides?: CallOverrides): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    BANCOR_NETWORK(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_NETWORK()"(overrides?: CallOverrides): Promise<[string]>;

    BANCOR_GAS_PRICE_LIMIT(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_GAS_PRICE_LIMIT()"(overrides?: CallOverrides): Promise<[string]>;

    addressOf(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "addressOf(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    BANCOR_X(overrides?: CallOverrides): Promise<[string]>;

    "BANCOR_X()"(overrides?: CallOverrides): Promise<[string]>;

    newOwner(overrides?: CallOverrides): Promise<[string]>;

    "newOwner()"(overrides?: CallOverrides): Promise<[string]>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  BANCOR_CONVERTER_UPGRADER(overrides?: CallOverrides): Promise<string>;

  "BANCOR_CONVERTER_UPGRADER()"(overrides?: CallOverrides): Promise<string>;

  BNT_TOKEN(overrides?: CallOverrides): Promise<string>;

  "BNT_TOKEN()"(overrides?: CallOverrides): Promise<string>;

  getAddress(
    _contractName: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "getAddress(bytes32)"(
    _contractName: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  CONTRACT_REGISTRY(overrides?: CallOverrides): Promise<string>;

  "CONTRACT_REGISTRY()"(overrides?: CallOverrides): Promise<string>;

  unregisterAddress(
    _contractName: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "unregisterAddress(bytes32)"(
    _contractName: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  contractNames(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "contractNames(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  BANCOR_CONVERTER_FACTORY(overrides?: CallOverrides): Promise<string>;

  "BANCOR_CONVERTER_FACTORY()"(overrides?: CallOverrides): Promise<string>;

  BNT_CONVERTER(overrides?: CallOverrides): Promise<string>;

  "BNT_CONVERTER()"(overrides?: CallOverrides): Promise<string>;

  registerAddress(
    _contractName: BytesLike,
    _contractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerAddress(bytes32,address)"(
    _contractName: BytesLike,
    _contractAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  itemCount(overrides?: CallOverrides): Promise<BigNumber>;

  "itemCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  BANCOR_FORMULA(overrides?: CallOverrides): Promise<string>;

  "BANCOR_FORMULA()"(overrides?: CallOverrides): Promise<string>;

  acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "acceptOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  CONTRACT_FEATURES(overrides?: CallOverrides): Promise<string>;

  "CONTRACT_FEATURES()"(overrides?: CallOverrides): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  BANCOR_NETWORK(overrides?: CallOverrides): Promise<string>;

  "BANCOR_NETWORK()"(overrides?: CallOverrides): Promise<string>;

  BANCOR_GAS_PRICE_LIMIT(overrides?: CallOverrides): Promise<string>;

  "BANCOR_GAS_PRICE_LIMIT()"(overrides?: CallOverrides): Promise<string>;

  addressOf(
    _contractName: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "addressOf(bytes32)"(
    _contractName: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  BANCOR_X(overrides?: CallOverrides): Promise<string>;

  "BANCOR_X()"(overrides?: CallOverrides): Promise<string>;

  newOwner(overrides?: CallOverrides): Promise<string>;

  "newOwner()"(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    BANCOR_CONVERTER_UPGRADER(overrides?: CallOverrides): Promise<string>;

    "BANCOR_CONVERTER_UPGRADER()"(overrides?: CallOverrides): Promise<string>;

    BNT_TOKEN(overrides?: CallOverrides): Promise<string>;

    "BNT_TOKEN()"(overrides?: CallOverrides): Promise<string>;

    getAddress(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    CONTRACT_REGISTRY(overrides?: CallOverrides): Promise<string>;

    "CONTRACT_REGISTRY()"(overrides?: CallOverrides): Promise<string>;

    unregisterAddress(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "unregisterAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    contractNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "contractNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    BANCOR_CONVERTER_FACTORY(overrides?: CallOverrides): Promise<string>;

    "BANCOR_CONVERTER_FACTORY()"(overrides?: CallOverrides): Promise<string>;

    BNT_CONVERTER(overrides?: CallOverrides): Promise<string>;

    "BNT_CONVERTER()"(overrides?: CallOverrides): Promise<string>;

    registerAddress(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "registerAddress(bytes32,address)"(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    itemCount(overrides?: CallOverrides): Promise<BigNumber>;

    "itemCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    BANCOR_FORMULA(overrides?: CallOverrides): Promise<string>;

    "BANCOR_FORMULA()"(overrides?: CallOverrides): Promise<string>;

    acceptOwnership(overrides?: CallOverrides): Promise<void>;

    "acceptOwnership()"(overrides?: CallOverrides): Promise<void>;

    CONTRACT_FEATURES(overrides?: CallOverrides): Promise<string>;

    "CONTRACT_FEATURES()"(overrides?: CallOverrides): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    BANCOR_NETWORK(overrides?: CallOverrides): Promise<string>;

    "BANCOR_NETWORK()"(overrides?: CallOverrides): Promise<string>;

    BANCOR_GAS_PRICE_LIMIT(overrides?: CallOverrides): Promise<string>;

    "BANCOR_GAS_PRICE_LIMIT()"(overrides?: CallOverrides): Promise<string>;

    addressOf(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "addressOf(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    BANCOR_X(overrides?: CallOverrides): Promise<string>;

    "BANCOR_X()"(overrides?: CallOverrides): Promise<string>;

    newOwner(overrides?: CallOverrides): Promise<string>;

    "newOwner()"(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AddressUpdate(
      _contractName: BytesLike | null,
      _contractAddress: null
    ): EventFilter;

    OwnerUpdate(
      _prevOwner: string | null,
      _newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    BANCOR_CONVERTER_UPGRADER(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_CONVERTER_UPGRADER()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BNT_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    "BNT_TOKEN()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAddress(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CONTRACT_REGISTRY(overrides?: CallOverrides): Promise<BigNumber>;

    "CONTRACT_REGISTRY()"(overrides?: CallOverrides): Promise<BigNumber>;

    unregisterAddress(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "unregisterAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    contractNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "contractNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BANCOR_CONVERTER_FACTORY(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_CONVERTER_FACTORY()"(overrides?: CallOverrides): Promise<BigNumber>;

    BNT_CONVERTER(overrides?: CallOverrides): Promise<BigNumber>;

    "BNT_CONVERTER()"(overrides?: CallOverrides): Promise<BigNumber>;

    registerAddress(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerAddress(bytes32,address)"(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    itemCount(overrides?: CallOverrides): Promise<BigNumber>;

    "itemCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    BANCOR_FORMULA(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_FORMULA()"(overrides?: CallOverrides): Promise<BigNumber>;

    acceptOwnership(overrides?: Overrides): Promise<BigNumber>;

    "acceptOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    CONTRACT_FEATURES(overrides?: CallOverrides): Promise<BigNumber>;

    "CONTRACT_FEATURES()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    BANCOR_NETWORK(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_NETWORK()"(overrides?: CallOverrides): Promise<BigNumber>;

    BANCOR_GAS_PRICE_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_GAS_PRICE_LIMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

    addressOf(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addressOf(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BANCOR_X(overrides?: CallOverrides): Promise<BigNumber>;

    "BANCOR_X()"(overrides?: CallOverrides): Promise<BigNumber>;

    newOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "newOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    BANCOR_CONVERTER_UPGRADER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "BANCOR_CONVERTER_UPGRADER()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BNT_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BNT_TOKEN()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAddress(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CONTRACT_REGISTRY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CONTRACT_REGISTRY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unregisterAddress(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "unregisterAddress(bytes32)"(
      _contractName: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    contractNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "contractNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BANCOR_CONVERTER_FACTORY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "BANCOR_CONVERTER_FACTORY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BNT_CONVERTER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BNT_CONVERTER()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registerAddress(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerAddress(bytes32,address)"(
      _contractName: BytesLike,
      _contractAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    itemCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "itemCount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BANCOR_FORMULA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BANCOR_FORMULA()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    acceptOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "acceptOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    CONTRACT_FEATURES(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "CONTRACT_FEATURES()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    BANCOR_NETWORK(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BANCOR_NETWORK()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BANCOR_GAS_PRICE_LIMIT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "BANCOR_GAS_PRICE_LIMIT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addressOf(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "addressOf(bytes32)"(
      _contractName: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BANCOR_X(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "BANCOR_X()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    newOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "newOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
