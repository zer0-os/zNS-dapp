@use 'styles/variables/animations';

.Container {
	/*
	 * Set up colour values
	 */
	--toggle-button-color-on: var(--color-accent-1);
	--toggle-button-color-off: var(--color-grey-lighter-2);
	--toggle-button-color: var(--toggle-button-color-off); // set default color

	.Toggle.On {
		--toggle-button-color: var(--toggle-button-color-on) !important;
	}

	/*
	 * This is the width of the toggle
	 * Height will be half of this value
	 */
	--toggle-button-dimension: 48px;

	display: flex;
	align-items: center;
	border-radius: 12px;

	> *:not(:first-child) {
		margin-left: 8px;
	}

	.Toggle {
		position: relative;
		width: var(--toggle-button-dimension);
		height: calc(var(--toggle-button-dimension) / 2);

		border-radius: 12px;
		border: 1px solid var(--toggle-button-color);

		transition: border #{animations.$time-medium} ease;

		overflow: hidden;
		cursor: pointer;

		> div {
			position: absolute;
			top: 1px;
			left: 1px;

			--toggle-button-dot-dimension: calc(
				var(--toggle-button-dimension) / 2 - 4px
			);
			height: var(--toggle-button-dot-dimension);
			width: var(--toggle-button-dot-dimension);
			border-radius: 50%;

			background-color: var(--toggle-button-color);

			transition: left #{animations.$time-medium} ease-in-out,
				background-color #{animations.$time-medium} ease;

			> span {
				position: absolute;
				font-size: 8px;
				top: 50%;
				font-weight: 700;
				text-transform: uppercase;
				color: var(--toggle-button-color);
				transition: color #{animations.$time-medium} ease;

				&:first-of-type {
					left: 0;
					transform: translateY(-50%) translateX(calc(-100% - 4px));
				}

				&:last-of-type {
					left: 100%;
					transform: translateY(calc(-50%)) translateX(4px);
				}
			}
		}

		&.On {
			background: var(--color-ocean-gradient-1);

			> div {
				left: calc(100% - (var(--toggle-button-dimension) / 2) + 3px);
			}
		}
	}
}
