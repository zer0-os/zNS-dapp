@use 'styles/variables/colors';
@use 'styles/variables/animations';
@use 'styles/variables/dimensions';
@use 'styles/variables/typography';

.ZNALink {
	display: flex;
}

.ZNALink > a {
	position: relative;
	transition: all #{animations.$time-short} ease-in-out;
	z-index: 1;
	cursor: pointer;
	color: var(--color-text-primary);
}

.ZNALink > a:last-of-type {
	font-weight: #{typography.$font-weight-regular};
}

.ZNALink > a::after {
	transition: opacity #{animations.$time-medium} ease-in-out;
	content: ' ';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%);
	width: calc(100% - 16px);
	box-shadow: 0 0 20px 13px rgba(colors.$white, 0.03);
	opacity: 0;
	z-index: -1;
}

.ZNALink > a:last-of-type::after {
	opacity: 1;
}

.ZNALink > a:not(:last-child):hover::after {
	opacity: 1;
}

.ZNALink > a:last-child::after {
	content: ' ';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%);
	width: calc(100% - 19px);
	box-shadow: 0 0 16px 8px rgba(177, 78, 255, 0.6);
	z-index: -1;
}

.Root {
	cursor: default;
	opacity: 0.7;
}

.Dots {
	display: none;
	font-weight: #{typography.$font-weight-bold};
	color: #{colors.$text-primary};
	z-index: 2;
}

@media only screen and (max-width: #{dimensions.$breakpoint-mobile-m}) {
	.ZNALink > a:not(:first-of-type):not(:nth-of-type(2)):not(:last-of-type) {
		display: none !important;
	}
	.ZNALink > a:not(:first-of-type) ~ a:last-of-type::before {
		content: '';
	}

	.isRootWithSubdomain {
		&.isNetworkSet {
			a:not(:first-of-type) ~ a:last-of-type::before {
				content: '..';
			}
		}

		a:not(:first-of-type):not(:nth-of-type(2)) ~ a:last-of-type::before {
			content: '..';
		}
	}

	.isNetworkSet {
		a:not(:first-of-type):not(:nth-of-type(1)):not(:last-of-type) {
			display: none !important;
		}
	}
	.Dots {
		display: inline-block;
	}
}
