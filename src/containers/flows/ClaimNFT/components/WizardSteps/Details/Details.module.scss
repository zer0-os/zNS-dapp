@use 'styles/variables/colors';

.Container {
	width: 100%;

	.Media {
		width: 100%;
		max-height: 306px;
		border-radius: var(--box-radius);
		object-fit: cover;
		margin: 40px 0;
	}

	.InfoContainer {
		.HeaderContainer {
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: baseline;

			&.isDetailsStep {
				justify-content: unset;
			}

			.HeaderPrompt {
				margin: 0 8px 8px 0;

				&.isMintingStep {
					width: 150px;
					margin: 0 8px 0 0;
				}

				&.claimComplete {
					margin: 0;
					color: #{colors.$success-green};
				}

				&.isMintingStep:after {
					overflow: hidden;
					display: inline-block;
					vertical-align: bottom;
					-webkit-animation: ellipsis steps(4, end) 2000ms infinite;
					animation: ellipsis steps(4, end) 2000ms infinite;
					content: '...';
					width: 0px;

					@keyframes ellipsis {
						to {
							width: 16px;
						}
					}

					@-webkit-keyframes ellipsis {
						to {
							width: 16px;
						}
					}
				}
			}
		}

		.InputContainer {
			display: flex;
			flex-direction: row;
			align-items: baseline;
			margin-bottom: 40px;

			.Input {
				padding: 12px 24px;
				height: 48px;
				text-overflow: ellipsis;

				&.hasValue {
					border: 1px solid #88d7ff;
					transition: unset;
				}

				&.hasError {
					background: none;
					border: solid 1px transparent;
					border-radius: 24px;
					background-image: linear-gradient(#0a0a0a, #0a0a0a),
						linear-gradient(
							45deg,
							rgba(244, 107, 71, 1) 0%,
							rgba(247, 99, 176, 1) 100%
						);
					background-origin: border-box;
					background-clip: padding-box, border-box;
					transition: background-image var(--animation-time-medium) ease-out;
				}

				&:not(:focus):not(.hasValue) {
					border: 1px solid var(--color-grey);
				}

				&::placeholder {
					color: var(--color-grey);
				}
			}

			.SecondaryPlaceholder {
				&.hasError {
					color: var(--color-error);
				}

				&.hasSuccess {
					color: var(--color-success);
				}
			}

			&.hasNotification {
				margin-bottom: 0px;
			}

			&.hasValue {
				align-items: center;
				position: relative;
				color: var(--color-grey);

				> span {
					position: absolute;
					top: 8px;
					left: 25px;
					color: var(--color-grey-lighter-3);
					font-size: 10px;
				}

				input {
					width: 100%;
					padding: 22.5px 24px 10.5px 24px;
					line-height: 19.2px;
					background: linear-gradient(
						94.23deg,
						rgba(60, 161, 255, 0.2) 0%,
						rgba(30, 81, 128, 0.2) 100%
					);
				}
			}

			.ButtonContainer {
				display: flex;
				align-self: center;
				margin-left: 16px;

				button {
					width: 115px;
				}
			}
		}

		.InputNotification {
			font-size: 12px;
			margin: 2px 0 0 26px;

			&.hasError {
				color: var(--color-error);
				margin-bottom: 23px;
			}

			&.hasSuccess {
				color: var(--color-success);
				margin-bottom: 23px;
			}
		}

		.Warning {
			display: flex;
			justify-content: center;
			color: var(--color-warning);
		}

		.TextContainer {
			.FlexRowWrapper {
				display: flex;
				flex-direction: row;
				align-items: center;

				.QuantityText {
					margin-right: 8px;
					font-size: 24px;
					font-weight: 700;
					line-height: 29px;
				}
			}

			.ArrowLink {
				font-size: 12px;
				// color: var(--color-grey);
				// &:hover {
				// 	text-shadow: none;
				// }
			}

			.Prompt {
				text-align: center;
				line-height: 24px;
				margin: 40px -2px 0 -2px;
			}
		}
	}

	.Spinner {
		display: flex;
		justify-content: center;
		margin: 100.25px 0;
	}
}
